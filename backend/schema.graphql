### This file was generated by Nexus Schema
### Do not make changes to this file directly


input MessageCreateManyWithoutUserInput {
  connect: [MessageWhereUniqueInput!]
  connectOrCreate: [MessageCreateOrConnectWithoutuserInput!]
  create: [MessageCreateWithoutUserInput!]
}

input MessageCreateOrConnectWithoutuserInput {
  create: MessageCreateWithoutUserInput!
  where: MessageWhereUniqueInput!
}

input MessageCreateWithoutUserInput {
  room: RoomCreateOneWithoutMessagesInput!
  text: String!
}

input MessageWhereUniqueInput {
  id: Int
}

type Mutation {
  signupUser(data: UserCreateInput!): User
}

input ProfileCreateOneWithoutUserInput {
  connect: ProfileWhereUniqueInput
  connectOrCreate: ProfileCreateOrConnectWithoutuserInput
  create: ProfileCreateWithoutUserInput
}

input ProfileCreateOrConnectWithoutuserInput {
  create: ProfileCreateWithoutUserInput!
  where: ProfileWhereUniqueInput!
}

input ProfileCreateWithoutUserInput {
  bio: String
}

input ProfileWhereUniqueInput {
  id: Int
  userId: Int
}

type Query {
  users: [User]
}

input RoomCreateOneWithoutMessagesInput {
  connect: RoomWhereUniqueInput
  connectOrCreate: RoomCreateOrConnectWithoutmessagesInput
  create: RoomCreateWithoutMessagesInput
}

input RoomCreateOrConnectWithoutmessagesInput {
  create: RoomCreateWithoutMessagesInput!
  where: RoomWhereUniqueInput!
}

input RoomCreateWithoutMessagesInput {
  name: String!
}

input RoomWhereUniqueInput {
  id: Int
}

type User {
  email: String
  id: Int
  name: String
}

input UserCreateInput {
  email: String!
  Message: MessageCreateManyWithoutUserInput
  name: String
  profile: ProfileCreateOneWithoutUserInput
}
